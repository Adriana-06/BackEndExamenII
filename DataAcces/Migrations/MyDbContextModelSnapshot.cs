// <auto-generated />
using System;
using DataAcces.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAcces.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAcces.Entities.Route", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RouteNameId")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RouteNameId");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Price = 500m,
                            RouteNameId = 1,
                            Source = "Lugar 1",
                            Target = "Lugar 2"
                        },
                        new
                        {
                            Id = 2,
                            Price = 500m,
                            RouteNameId = 2,
                            Source = "Lugar 2",
                            Target = "Lugar 1"
                        },
                        new
                        {
                            Id = 3,
                            Price = 1000m,
                            RouteNameId = 2,
                            Source = "Lugar 2",
                            Target = "Lugar 3"
                        },
                        new
                        {
                            Id = 4,
                            Price = 1000m,
                            RouteNameId = 3,
                            Source = "Lugar 3",
                            Target = "Lugar 2"
                        },
                        new
                        {
                            Id = 5,
                            Price = 1500m,
                            RouteNameId = 1,
                            Source = "Lugar 1",
                            Target = "Lugar 3"
                        },
                        new
                        {
                            Id = 6,
                            Price = 1500m,
                            RouteNameId = 3,
                            Source = "Lugar 3",
                            Target = "Lugar 1"
                        });
                });

            modelBuilder.Entity("DataAcces.Entities.RouteName", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RouteNames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lugar 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lugar 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lugar 3"
                        });
                });

            modelBuilder.Entity("DataAcces.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("RouteId")
                        .HasColumnType("int");

                    b.Property<string>("SeatNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TravelDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("DataAcces.Entities.Route", b =>
                {
                    b.HasOne("DataAcces.Entities.RouteName", "RouteName")
                        .WithMany()
                        .HasForeignKey("RouteNameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RouteName");
                });

            modelBuilder.Entity("DataAcces.Entities.Ticket", b =>
                {
                    b.HasOne("DataAcces.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Route");
                });
#pragma warning restore 612, 618
        }
    }
}
